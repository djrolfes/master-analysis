#!/bin/bash
#
# SLURM Job Script for Analysis
#
#SBATCH --job-name=wf_analysis
#SBATCH --output=output/slurm-analysis-%j.out
#SBATCH --error=output/slurm-analysis-%j.err
#SBATCH --time=02:00:00
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=32G

    set -euo pipefail
if [ -n "${SLURM_JOB_ID:-}" ]; then

    module purge
    module load GCC/11.2.0
    module load R
    module load Python
fi

# --- Parse optional -skip flag ---
SKIP_STEPS=250
if [ "$#" -ge 2 ] && [ "$1" = "-skip" ]; then
    SKIP_STEPS="$2"
    shift 2
fi

# --- Expect one or more output directories (remaining args) ---
if [ "$#" -lt 1 ]; then
    echo "Error: Missing argument. Usage: sbatch analysis.slurm [-skip <n>] <output_dir1> [<output_dir2> ...]"
    exit 1
fi

# Build a list of absolute paths for output dirs
ABS_OUTPUT_DIRS=()
for dir in "$@"; do
    ABS_OUTPUT_DIRS+=("$(realpath "$dir")")
done

# --- Check and Install Hadron once ---
echo "Running check_and_install_hadron.sh..."
if [ -n "${SLURM_JOB_ID:-}" ]; then
    echo "Running with srun..."
    srun ./scripts/check_and_install_hadron.sh
else
    echo "Running without srun..."
    ./scripts/check_and_install_hadron.sh
fi

# --- Python Environment Setup (run once) ---
if [ ! -d ".venv" ]; then
    python3 -m venv .venv
fi

source .venv/bin/activate
pip install --upgrade pip
pip install pandas PyYAML
pip install matplotlib seaborn

# --- Change into analysis directory before dispatching ---
cd analysis

# --- Run Analysis for each provided absolute directory sequentially ---
for ABS_OUTPUT_DIR in "${ABS_OUTPUT_DIRS[@]}"; do

    if [ ! -d "$ABS_OUTPUT_DIR" ]; then
        echo "Warning: Output directory does not exist: $ABS_OUTPUT_DIR. Skipping."
        continue
    fi

    echo "Starting analysis job for directory: $ABS_OUTPUT_DIR (skip=$SKIP_STEPS)"
    if [ -n "${SLURM_JOB_ID:-}" ]; then
        echo "Running with srun..."
        srun python3 analysis.py "$ABS_OUTPUT_DIR" "$SKIP_STEPS"
    else
        echo "Running without srun..."
        python3 analysis.py "$ABS_OUTPUT_DIR" "$SKIP_STEPS"
    fi
    echo "Analysis job for $ABS_OUTPUT_DIR finished."

    # Move PDFs generated by this run into the output directory
    if compgen -G "*.pdf" > /dev/null; then
        mv -- *.pdf "$ABS_OUTPUT_DIR/"
        echo "Moved generated PDFs to $ABS_OUTPUT_DIR"
    else
        echo "No PDFs generated for $ABS_OUTPUT_DIR"
    fi

done

echo "All requested analyses completed."